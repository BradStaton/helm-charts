# Default values for cloudflare-ddns.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: favonia/cloudflare-ddns
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: 1.15.1

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes:
  - name: cloudflare-api-token
    secret:
      secretName: cloudflare-api-token

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: cloudflare-api-token
    mountPath: /run/secrets/cloudlare_api_token
    subPath: token
    readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# Fully qualified domain names or wildcard domain names that the updater
# should manage for both A and AAAA records. Listing a domain in DOMAINS
# is equivalent to listing the same domain in both IP4_DOMAINS and IP6_DOMAINS
domains: []
# Fully qualified domain names or wildcard domain names that the updater should
# manage for A records
ip4Domains: []
# Fully qualified domain names or wildcard domain names that the updater should
# manage for AAAA records
ip6Domains: []
# WAF lists the updater should manage. A list reference is written in the
# format <account-id>/<list-name> where account-id is your account ID and
# list-name is the list name; it should look like
# 0123456789abcdef0123456789abcdef/mylist. If the referenced WAF list does not
# exist, the updater will try to create it.
wafLists: []

# This specifies how to detect the current IPv4 address
ip4Provider: cloudflare.trace
# This specifies how to detect the current IPv6 address
ip6Provider: cloudflare.trace

# The expiration of cached Cloudflare API responses
cacheExpiration: "6h0m0s"
# Whether managed DNS records and WAF lists should be deleted on exit
deleteOnStop: "false"
# The timezone used for logging messages and parsing cron configurations
timzezone: "UTC"
# The schedule to re-check IP addresses and update DNS records and WAF lists
updateCron: "@every 5m"
# Whether to check IP addresses and update records immediately on start
updateOnStart: "true"
# The timeout of each attempt to detect IP address
detectionTimeout: "5s"
# The timeout of each attempt to update records
updateTimeout: "30s"

# Whether new DNS records should be proxied by Cloudflare
proxied: "false"
# The time-to-live (TTL) (in seconds) of new DNS records. "1" means "automatic"
# to Cloudflare
TTL: 1
# The record comment of new DNS records
recordComment: ""
# The text description of new WAF lists
wafListDescription: ""

# Whether the updater should use emojis in the logging
logEmojiEnabled: "true"
# Whether the updater should reduce the logging
quiet: "false"

# The Healthchecks ping URL to ping when the updater successfully updates IP
# addresses
healtcheckPingUrl: ""
# The Uptime Kumaâ€™s Push URL to ping when the updater successfully updates IP
# addresses
uptimeKumaUrl: ""
# Newline-separated shoutrrr URLs to which the updater sends notifications of
# IP address changes and other events.
shoutrrrUrls: ""